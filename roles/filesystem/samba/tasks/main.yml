---
- name: Include OS-specific variables
  include_vars: "{{ ansible_facts['os_family'] }}.yml"

- name: Install or update Samba packages
  package:
    name: "{{ samba_packages }}"
    state: latest

- name: Register Samba version
  shell: >
    set -o nounset -o pipefail -o errexit &&
    smbd --version | sed 's/Version //'
  args:
    executable: /bin/bash
  register: samba_version
  changed_when: false

- name: Samba configuration
  template:
    dest: "{{ samba_configuration }}"
    src: smb.conf.j2
    validate: "testparm -s %s"
  notify:
    - restart Samba services

- name: Create Samba users if they don't exist yet
  shell: >
    set -o nounset -o pipefail -o errexit &&
    (pdbedit --user={{ item.name }} 2>&1 > /dev/null) \
    || (echo {{ item.password }}; echo {{ item.password }}) \
    | smbpasswd -s -a {{ item.name }}
  args:
    executable: /bin/bash
  with_items: "{{ samba_users }}"
  no_log: true
  register: create_user_output
  changed_when: "'Added user' in create_user_output.stdout"

- name: Start Samba service(s)
  service:
    name: "{{ item }}"
    state: started
    enabled: true
  with_items: "{{ samba_services }}"
