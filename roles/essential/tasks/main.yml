---
- name: Check if pi user exist
  command: id -un pi
  register: pi_exists
  ignore_errors: true

- name: Update raspberry password
  user:
    name: pi
    password: "{{ password | password_hash('sha512') }}"
    update_password: always
  when: pi_exists.rc == 0

- name: Generate the locale (Debian and Ubuntu)
  when: ansible_os_family == 'Debian'
  locale_gen:
    name: "{{ locale }}"
    state: present

- name: Update and upgrade apt packages (Debian and Ubuntu)
  when: ansible_os_family == 'Debian'
  shell:
    cmd: apt update && apt upgrade -y

- name: Check if reboot required
  stat:
    path: /var/run/reboot-required
  register: reboot_required_file

- name: Reboot if required
  reboot:
    msg: Rebooting due to a kernel update
  when: reboot_required_file.stat.exists == true

- name: Install extra packages
  package: 
    name: "{{ extra_packages }}" 
    state: latest

- name: Set the correct ownership for the user's home folder (not using ansible.builtin.file because of idempotency)
  shell:
    cmd: "chown -R {{ username }}:{{ username}} /home/{{ username }}"
  register: chown_status
  changed_when: chown_status.stdout != ""

- name: Set the hostname
  hostname:
    name: "{{ inventory_hostname }}"

- name: Replace the hostname entry with our own
  ansible.builtin.lineinfile:
    path: /etc/hosts
    insertafter: ^127\.0\.0\.1 *localhost
    line: "127.0.0.1 {{ inventory_hostname }}"
    owner: root
    group: root
    mode: '0644' 

- name: Suppress login messages
  file:
    name: /home/{{ username }}/.hushlogin
    state: touch
    modification_time: preserve
    access_time: preserve

- name: Disable cron e-mail notifications
  cron:
    name: MAILTO
    env: yes
    job: ""

- name: Switch to pip3
  alternatives:
    name: pip
    link: /usr/bin/pip
    path: /usr/bin/pip3

- name: Switch to python3
  alternatives:
    name: python
    link: /usr/bin/python
    path: /usr/bin/python3